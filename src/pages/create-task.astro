---
import { renderUniqueStylesheet } from "astro/runtime/server/index.js";
import Layout from "../layouts/Layout.astro";
import { ViewTransitions } from "astro:transitions";
import Modal from "../components/Modal.astro";

const id = Astro.request.url.substring(Astro.request.url.length -1);
let showModal = false;

if(Astro.request.method === 'POST'){
    const data = await Astro.request.formData();
    const task = data.get('task');
    const date = data.get('date');
    
    const taskData = {
        'task': task,
        'date_to_do': date,
        'user_id': id
    }

    const response = await fetch('http://localhost:3000/task', {
            method: 'POST',
            body: JSON.stringify(taskData),
                headers: {
                    'Content-Type': 'application/json'
                }
        });

    if(response.ok){
        console.log('Se ha agregado la tarea correctamente');
        showModal = true;
    }
}
---

<Layout title="Crear un nueva tarea" displaySideBar={true}>
    <ViewTransitions />
    <section class="section-form">
        <form action="" class="form" method="POST">
            <h1>Agregar una nueva tarea</h1>
            <div class="input-form-task">
                <label for="">Ingrese los datos de la nueva tarea</label>
                <textarea class="input-task input-task-text" name="task" id="" placeholder="Detalles sobre la tarea" required> </textarea>
            </div>
            <div class="input-form-task">
                <label for="">Seleccione la fecha m√°xima para hacer la tarea</label>
                <input type="datetime-local" name="date" id="" class="input-date-task input-task" required/>
            </div>
            <div class="input-form-task">
                <input type="submit" class="btn-submit input-task" value="Agregar Tarea"/>
            </div>
        </form>
    </section>

{showModal &&(
    <Modal
    message="Se ha agregado la tarea"
    success="check"
    />
)}    

    

</Layout>



<style>

    body{
        margin: 0
        min-height: 100vh;
        padding: 0;

    }

    .section-form {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto;
        border: 1px solid #4338ca;
        width: 30rem;
        /* margin: 5rem auto; */
        border-radius: 1rem; 
        height: 30rem;
        box-shadow: 4px 5px 41px 0px rgba(0, 0, 0, 0.75);
        -webkit-box-shadow: 4px 5px 41px 0px rgba(0, 0, 0, 0.75);
        -moz-box-shadow: 4px 5px 41px 0px rgba(0, 0, 0, 0.75);
    }

    .form {
        width: 100%;
        margin: 0 auto;
        text-align: center;
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .form h1{
        margin-top: 2rem;
        margin-bottom: -.6rem;
    }

    .input-task{
        width: 80%;
        border-radius: 8px;
        height: 1.8rem;
        border: 1px solid #4338ca;
    }

    .input-task-text{
        resize: none;
        height: 8rem;
    }

    .btn-submit{
        background-color: #4338ca;
        color: white;
        font-weight: 700;
        text-transform: uppercase;
        cursor: pointer;
    }

    .btn-submit:hover{
        background-color: rgb(85, 85, 156);
    }

    .input-form-task{
        display: flex;
        flex-direction: column;
        gap: 1rem;
        align-items: center;
        text-align: start;
    }

    
</style>
